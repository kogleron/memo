// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"memo/configs"
	"memo/internal/api/telegram/command"
	"memo/internal/apps"
	"memo/internal/bootstrap"
	"memo/internal/infra"
	"memo/internal/pkg/telegram"
)

// Injectors from wire.go:

func initApp() (*apps.PollingBotApp, error) {
	telegramConfig := configs.GetTelegramConfig()
	botAPI, err := bootstrap.NewTgBot(telegramConfig)
	if err != nil {
		return nil, err
	}
	dbConfig := configs.GetDBConfig()
	db, err := bootstrap.NewGORMDb(dbConfig)
	if err != nil {
		return nil, err
	}
	userGORMRepository := infra.NewUserGORMRepository(db)
	parser := bootstrap.NewParser(userGORMRepository)
	memoGORMRepository, err := infra.NewMemoGORMRepository(db)
	if err != nil {
		return nil, err
	}
	addExecutor := command.NewAddExecutor(memoGORMRepository, botAPI)
	appConfig := configs.GetAppConfig()
	randExecutor := bootstrap.NewRandExecutor(appConfig, memoGORMRepository, botAPI)
	startExecutor := command.NewStartExecutor(userGORMRepository, botAPI)
	replier := telegram.NewReplier(botAPI)
	searchExecutor := bootstrap.NewSearchExecutor(memoGORMRepository, appConfig, replier)
	defaultCommandExecutor := bootstrap.NewDefaultCommandExecutor(addExecutor)
	deleteExecutor := command.NewDeleteExecutor(memoGORMRepository, replier)
	executors := bootstrap.NewCommandExecutors(addExecutor, randExecutor, startExecutor, searchExecutor, defaultCommandExecutor, deleteExecutor, replier)
	pollingBot := bootstrap.NewTgAPIPollingBot(botAPI, telegramConfig, parser, executors)
	pollingBotApp := apps.NewPollingBotApp(pollingBot)
	return pollingBotApp, nil
}
